<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ethereal</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-16T14:26:13.834Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YHJ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第三课</title>
    <link href="http://yoursite.com/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/"/>
    <id>http://yoursite.com/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/</id>
    <published>2020-05-16T07:38:55.569Z</published>
    <updated>2020-05-16T14:26:13.834Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><img src="/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/1.PNG" alt="1"></p><p>手工操作阶段主要缺点:用户独占全机，人机速度矛盾导致资源率极低</p><p>单道批处理系统:引入脱机输入/输出技术(用磁带完成),并监督程序负责控制作业的输入输出</p><p>主要优点:缓解了一定程度的人机速度矛盾，资源利用率有所提升。</p><p>主要缺点:内存中仅有一道程序运行，只有该程序运行结束之后才能调入下一道程序。CPU有大量的时间是在空闲I/O完成。资源利用率依然很低。</p><p>多道批处理系统:</p><p>主要优点:多道程序并发执行，共享计算机资源，资源利用率大幅提升，CPU和其它资源保持忙碌状态，系统吞吐量增大。</p><p>主要缺点: 用户响应时间长，没有人机交互功能（用户提交自己的作业之后就只能等待计算机处理完成，中间不能控制自己的作业执行）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;p&gt;&lt;img src=&quot;/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/1.PNG&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;手工操作阶段主要缺点:用户独占全机，人机速度矛盾导致资源率极低&lt;/p&gt;
&lt;p&gt;单道批处理系
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第二课</title>
    <link href="http://yoursite.com/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/"/>
    <id>http://yoursite.com/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/</id>
    <published>2020-05-16T06:45:36.100Z</published>
    <updated>2020-05-16T14:18:23.576Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><img src="/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/1.PNG" alt="1"></p><p>并发:指两个或多个事件在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。</p><p>并行:指两个或多个事件在同一时刻同时发生。</p><p>共享即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用</p><p><img src="/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/2.PNG" alt="2"></p><p>并发和共享互为存在条件</p><p>虚拟:指一个物理上的实体变为若干个逻辑上的对应物。物理实体是实际存在的，而逻辑上对应物是用户感受到的</p><p>虚拟存储器，空分复用技术</p><p>异步:指在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性。</p><p><img src="/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/3.PNG" alt="3"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;p&gt;&lt;img src=&quot;/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/1.PNG&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;并发:指两个或多个事件在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>操作系统引论</title>
    <link href="http://yoursite.com/2020/05/15/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BC%95%E8%AE%BA/"/>
    <id>http://yoursite.com/2020/05/15/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BC%95%E8%AE%BA/</id>
    <published>2020-05-15T09:37:21.913Z</published>
    <updated>2020-05-15T13:25:30.037Z</updated>
    
    <content type="html"><![CDATA[<p>操作系统引论</p><a id="more"></a><p>一.操作系统的目标<br>（1）方便性<br>（2）有效性<br>      1）提高系统资源利用率<br>      2）提高系统的吞吐量<br>（3）可扩充性<br>（4）开放性<br>二.操作系统的作用<br>（1）OS作为用户与计算机硬件系统之间的接口<br>（2）OS做为计算机系统资源的管理者<br>（3）OS实现了对计算机资源的抽象<br>三.推动操作系统发展的主要动力<br>（1）不断提高计算机资源的利用率<br>（2）方便用户<br>（3）器件的不断更迭换代<br>（4）计算机体系结构的不断发展<br>（5）不断提出新的应用需求<br>四.操作系统<br>单道批处理系统<br>多道批处理系统<br> 优缺点<br>      1）资源利用率高<br>      2）系统吞吐量大<br>      3）平均周转时间长<br>      4）无交互能力<br>  需要解决的问题<br>      1）处理机争用问题<br>      2）内存分配和保护问题<br>      3）I/O设备分配问题<br>      4）文件组织和管理问题<br>      5）作业管理问题<br>      6）用户与系统的接口问题<br>分时系统<br> 用户的需求<br>     1）人-机交互<br>     2）共享主机<br> 分时系统的特征<br>     1）多路性<br>     2）独立性<br>     3）及时性</p><pre><code>4）交互性</code></pre><hr><h2 id="实时系统"><a href="#实时系统" class="headerlink" title="实时系统"></a>实时系统</h2><p>微机操作系统<br>    1）单用户单任务操作系统<br>    2）单用户多任务操作系统<br>    3）多用户多任务操作系统</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;操作系统引论&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第一课</title>
    <link href="http://yoursite.com/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <id>http://yoursite.com/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/</id>
    <published>2020-05-15T08:08:30.408Z</published>
    <updated>2020-05-16T14:09:20.920Z</updated>
    
    <content type="html"><![CDATA[<pre><code>                                操作系统的概念操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织调度计算机的工作和资源的分配，以提供给用户和其他软件方便的接口和环境，它是计算机系统中最基本的系统软件。</code></pre><a id="more"></a><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/1.PNG" alt="1"></p><p>​                         操作系统的功能和目标<br>进程是一个程序的执行过程。执行前需要将该程序放到内存中，才能被cpu处理。</p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/2.PNG" alt="2"></p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/3.PNG" alt="3"></p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/4.PNG" alt="4"></p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/5.PNG" alt="5"><br>广义指令=系统调用命令=广义指令<br><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/6.PNG" alt="6"><br><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/7.PNG" alt="7"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;                                操作系统的概念
操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织调度计算机的工作和资源的分配，
以提供给用户和其他软件方便的接口和环境，它是计算机系统中最基本的系统软件。&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
