<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ethereal</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-19T09:17:49.386Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YHJ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第四课</title>
    <link href="http://yoursite.com/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/"/>
    <id>http://yoursite.com/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/</id>
    <published>2020-05-17T15:06:16.013Z</published>
    <updated>2020-05-19T09:17:49.386Z</updated>
    
    <content type="html"><![CDATA[<p>  操作系统的运行机制和体系结构</p><a id="more"></a>  ![1](第四课/1.PNG)<p>  指令就是处理器（cpu）能识别、执行的最基本命令</p><p>  <img src="/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/3.PNG" alt="3"></p><p>  两种处理器状态<br><img src="/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/2.PNG" alt="2"></p><p><img src="/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/4.PNG" alt="4"></p><p><img src="/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/5.PNG" alt="5"><br>内核是计算机配置的底层软件，是操作系统最基本、最核心的部分<br>实现操作系统内核功能的那些程序就是内核程序。<br><img src="/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/6.PNG" alt="6"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  操作系统的运行机制和体系结构&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第三课</title>
    <link href="http://yoursite.com/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/"/>
    <id>http://yoursite.com/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/</id>
    <published>2020-05-16T07:38:55.569Z</published>
    <updated>2020-05-17T15:02:40.825Z</updated>
    
    <content type="html"><![CDATA[<p>没经历我的磨难，就别劝我善良</p><a id="more"></a><p><img src="/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/1.PNG" alt="1"><br>手工操作阶段<br>        主要缺点:用户独占全机，人机速度矛盾导致资源率极低<br>单道批处理系统:引入脱机输入/输出技术(用磁带完成),并监督程序负责控制作业的输入输出<br>    主要优点:缓解了一定程度的人机速度矛盾，资源利用率有所提升。<br>        主要缺点:内存中仅有一道程序运行，只有该程序运行结束之后才能调入下一道程序。CPU有大量的时间是在空闲I/O完成。资源利用率依然很低。<br>多道批处理系统:<br>    主要优点:多道程序并发执行，共享计算机资源，资源利用率大幅提升，CPU和其它资源保持忙碌状态，系统吞吐量增大。<br>    主要缺点: 用户响应时间长，没有人机交互功能（用户提交自己的作业之后就只能等待计算机处理完成，中间不能控制自己的作业执行）<br>分时操作系统 :计算机以时间片为单位轮流为各个用户/作业服务，各个用户可通过终端与计算机进行交互。<br>    主要优点: 用户请求可以被及时响应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在<br>    主要缺点：不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的，循环的为每个用户/作业服务一个时间片，不区分任务的紧急性。<br>实时操作系统：<br>    主要优点:能够优先响应一些紧急任务，某些紧急任务 不需时间片排队。<br>    在实时操作系统的控制下，计算机系统收到外部信号后及时进行处理，并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性</p><p><img src="/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/2.PNG" alt="2"><br><img src="/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/3-1589727606879.PNG" alt="3"></p><p><img src="/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/4.PNG" alt="4"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没经历我的磨难，就别劝我善良&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第二课</title>
    <link href="http://yoursite.com/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/"/>
    <id>http://yoursite.com/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/</id>
    <published>2020-05-16T06:45:36.100Z</published>
    <updated>2020-05-16T14:31:49.645Z</updated>
    
    <content type="html"><![CDATA[<p>时光荏苒，旦夕之间，略有遗憾，似白驹过隙，蹉跎自悟。</p><a id="more"></a><p><img src="/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/1.PNG" alt="1"></p><p>并发:指两个或多个事件在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。</p><p>并行:指两个或多个事件在同一时刻同时发生。</p><p>共享即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用</p><p><img src="/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/2.PNG" alt="2"></p><p>并发和共享互为存在条件</p><p>虚拟:指一个物理上的实体变为若干个逻辑上的对应物。物理实体是实际存在的，而逻辑上对应物是用户感受到的</p><p>虚拟存储器，空分复用技术</p><p>异步:指在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性。</p><p><img src="/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/3.PNG" alt="3"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时光荏苒，旦夕之间，略有遗憾，似白驹过隙，蹉跎自悟。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第一课</title>
    <link href="http://yoursite.com/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <id>http://yoursite.com/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/</id>
    <published>2020-05-15T08:08:30.408Z</published>
    <updated>2020-05-16T14:09:20.920Z</updated>
    
    <content type="html"><![CDATA[<pre><code>                                操作系统的概念操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织调度计算机的工作和资源的分配，以提供给用户和其他软件方便的接口和环境，它是计算机系统中最基本的系统软件。</code></pre><a id="more"></a><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/1.PNG" alt="1"></p><p>​                         操作系统的功能和目标<br>进程是一个程序的执行过程。执行前需要将该程序放到内存中，才能被cpu处理。</p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/2.PNG" alt="2"></p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/3.PNG" alt="3"></p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/4.PNG" alt="4"></p><p><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/5.PNG" alt="5"><br>广义指令=系统调用命令=广义指令<br><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/6.PNG" alt="6"><br><img src="/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/7.PNG" alt="7"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;                                操作系统的概念
操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织调度计算机的工作和资源的分配，
以提供给用户和其他软件方便的接口和环境，它是计算机系统中最基本的系统软件。&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
