{"meta":{"title":"忘川","subtitle":"","description":"欢迎大家前来交流学习","author":"YHJ","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-05-12T10:59:54.000Z","updated":"2020-05-23T03:19:21.842Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"categories","date":"2014-12-22T04:39:04.000Z","updated":"2020-05-26T09:22:49.472Z","comments":true,"path":"categories/index-1.html","permalink":"http://yoursite.com/categories/index-1.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"categories","date":"2020-05-12T10:58:20.000Z","updated":"2020-05-12T10:59:37.907Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"search","date":"2020-05-26T09:26:40.000Z","updated":"2020-05-26T09:27:04.976Z","comments":true,"path":"search/index.html","permalink":"http://yoursite.com/search/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2014-12-22T04:39:04.000Z","updated":"2020-05-26T09:23:32.522Z","comments":true,"path":"tags/index-1.html","permalink":"http://yoursite.com/tags/index-1.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2020-05-12T10:54:46.000Z","updated":"2020-05-16T05:14:55.682Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":"YHJ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"第十五课","slug":"第十五课","date":"2020-05-26T15:23:13.497Z","updated":"2020-05-27T02:54:17.536Z","comments":true,"path":"2020/05/26/第十五课/","link":"","permalink":"http://yoursite.com/2020/05/26/%E7%AC%AC%E5%8D%81%E4%BA%94%E8%AF%BE/","excerpt":"","text":"FCFS、SJF、HRRN调度算法 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第十四课","slug":"第十四课","date":"2020-05-26T15:04:29.998Z","updated":"2020-05-27T02:54:17.536Z","comments":true,"path":"2020/05/26/第十四课/","link":"","permalink":"http://yoursite.com/2020/05/26/%E7%AC%AC%E5%8D%81%E5%9B%9B%E8%AF%BE/","excerpt":"","text":"调度算法的评价指标cpu利用率 系统吞吐量 周转时间 等待时间 响应时间 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第十三课","slug":"第十三课","date":"2020-05-26T14:35:07.986Z","updated":"2020-05-27T02:54:17.525Z","comments":true,"path":"2020/05/26/第十三课/","link":"","permalink":"http://yoursite.com/2020/05/26/%E7%AC%AC%E5%8D%81%E4%B8%89%E8%AF%BE/","excerpt":"","text":"进程调度的时机切换与过程调度方式进程调度的时机 进程在操作系统内核程序临界区中不能进行调度与切换 临界资源：一个时间段内只允许一个进程使用的资源。各进程需要互斥的访问临界资源。 临界区：访问临界资源的那段代码 进程调度的方式 进程的切换与过程 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第十二课","slug":"第十二课","date":"2020-05-26T12:54:07.683Z","updated":"2020-05-27T02:54:17.536Z","comments":true,"path":"2020/05/26/第十二课/","link":"","permalink":"http://yoursite.com/2020/05/26/%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AF%BE/","excerpt":"","text":"处理机调度的概念与层次调度的基本概念***当有一堆人物要处理，但由于资源有限，这些事情没法同时处理。这就需要确定某种规则来决定处理这些人物的顺序，这就是“调度”研究的问题。 ***在多道程序系统中，进程的数量往往多于处理机的个数的，这样不可能同时并行地处理各个进程。处理机调度，就是从就绪队列中按照一定的算法选择一个进程并将处理机分配给它运行，以实现进程的并发执行 高级调度 中级调度 低级调度低级调度(进程调度)，其主要任务是按照某种方法和策略从就绪队列中选取一个进程，将处理机分配给它。 进程调度是操作系统中最基本的一种调度，在一般的操作系统中都必须配置进程调度。 进程调度的频率很高，一般几十毫秒一次。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第十一课","slug":"第十一课","date":"2020-05-24T13:42:26.563Z","updated":"2020-05-26T12:53:13.105Z","comments":true,"path":"2020/05/24/第十一课/","link":"","permalink":"http://yoursite.com/2020/05/24/%E7%AC%AC%E5%8D%81%E4%B8%80%E8%AF%BE/","excerpt":"线程、多线程模型**","text":"线程、多线程模型** 什么是线程，为什么要引入线程？传统的进程是程序执行流的最小单位，但是引入线程后，线程成为了程序执行流的最小单位。线程是一个基本的CPU执行单元，也是程序执行流的最小单位。引入线程后，不仅是进程之间可以并发，进程内的各线程之间也可以并发，从而提高了系统的并发度，使得一个进程内也可以并发处理各种任务。引入线程后，进程只作为除CPU之外的系统资源的分配单元。 ​ 引入线程机制后，有什么变化？ 重点重点重点:操作系统只”看得见”内核级线程，因此只有内核级线程才是处理机分配的单位 多线程模型 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第十课","slug":"第十课","date":"2020-05-22T09:54:38.924Z","updated":"2020-05-24T13:12:59.068Z","comments":true,"path":"2020/05/22/第十课/","link":"","permalink":"http://yoursite.com/2020/05/22/%E7%AC%AC%E5%8D%81%E8%AF%BE/","excerpt":"进程通信","text":"进程通信 进程通信是指进程之间的信息交换进程就是分配系统资源的单位（包括内存地址空间），因此各进程拥有的内存地址空间相互独立。为了保证安全，一个进程不能直接访问另一个进程的地址空间。消息传递进程间的数据交换以格式化的消息为单位，进程通过操作系统提供的“发送消息/接受消息”两个原语进行数据交换。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第九课","slug":"第九课","date":"2020-05-22T09:14:38.201Z","updated":"2020-05-22T09:52:59.510Z","comments":true,"path":"2020/05/22/第九课/","link":"","permalink":"http://yoursite.com/2020/05/22/%E7%AC%AC%E4%B9%9D%E8%AF%BE/","excerpt":"进程控制","text":"进程控制 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第八课","slug":"第八课","date":"2020-05-22T08:56:22.411Z","updated":"2020-05-22T09:21:10.051Z","comments":true,"path":"2020/05/22/第八课/","link":"","permalink":"http://yoursite.com/2020/05/22/%E7%AC%AC%E5%85%AB%E8%AF%BE/","excerpt":"进程的状态与转换","text":"进程的状态与转换 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第七课","slug":"第七课","date":"2020-05-20T07:48:28.822Z","updated":"2020-05-20T07:51:16.476Z","comments":true,"path":"2020/05/20/第七课/","link":"","permalink":"http://yoursite.com/2020/05/20/%E7%AC%AC%E4%B8%83%E8%AF%BE/","excerpt":"进程","text":"进程 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第六课","slug":"第六课","date":"2020-05-19T09:57:16.793Z","updated":"2020-05-20T07:51:16.479Z","comments":true,"path":"2020/05/19/第六课/","link":"","permalink":"http://yoursite.com/2020/05/19/%E7%AC%AC%E5%85%AD%E8%AF%BE/","excerpt":"YHJ","text":"YHJ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第五课","slug":"第五课","date":"2020-05-19T09:48:27.941Z","updated":"2020-05-20T07:51:16.476Z","comments":true,"path":"2020/05/19/第五课/","link":"","permalink":"http://yoursite.com/2020/05/19/%E7%AC%AC%E4%BA%94%E8%AF%BE/","excerpt":"中断和异常","text":"中断和异常 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第四课","slug":"第四课","date":"2020-05-17T15:06:16.013Z","updated":"2020-05-22T09:29:25.175Z","comments":true,"path":"2020/05/17/第四课/","link":"","permalink":"http://yoursite.com/2020/05/17/%E7%AC%AC%E5%9B%9B%E8%AF%BE/","excerpt":"操作系统的运行机制和体系结构","text":"操作系统的运行机制和体系结构 指令就是处理器（cpu）能识别、执行的最基本命令 两种处理器状态 内核是计算机配置的底层软件，是操作系统最基本、最核心的部分实现操作系统内核功能的那些程序就是内核程序。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第三课","slug":"第三课","date":"2020-05-16T07:38:55.569Z","updated":"2020-05-17T15:02:40.825Z","comments":true,"path":"2020/05/16/第三课/","link":"","permalink":"http://yoursite.com/2020/05/16/%E7%AC%AC%E4%B8%89%E8%AF%BE/","excerpt":"没经历我的磨难，就别劝我善良","text":"没经历我的磨难，就别劝我善良 手工操作阶段 主要缺点:用户独占全机，人机速度矛盾导致资源率极低单道批处理系统:引入脱机输入/输出技术(用磁带完成),并监督程序负责控制作业的输入输出 主要优点:缓解了一定程度的人机速度矛盾，资源利用率有所提升。 主要缺点:内存中仅有一道程序运行，只有该程序运行结束之后才能调入下一道程序。CPU有大量的时间是在空闲I/O完成。资源利用率依然很低。多道批处理系统: 主要优点:多道程序并发执行，共享计算机资源，资源利用率大幅提升，CPU和其它资源保持忙碌状态，系统吞吐量增大。 主要缺点: 用户响应时间长，没有人机交互功能（用户提交自己的作业之后就只能等待计算机处理完成，中间不能控制自己的作业执行）分时操作系统 :计算机以时间片为单位轮流为各个用户/作业服务，各个用户可通过终端与计算机进行交互。 主要优点: 用户请求可以被及时响应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在 主要缺点：不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的，循环的为每个用户/作业服务一个时间片，不区分任务的紧急性。实时操作系统： 主要优点:能够优先响应一些紧急任务，某些紧急任务 不需时间片排队。 在实时操作系统的控制下，计算机系统收到外部信号后及时进行处理，并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第二课","slug":"第二课","date":"2020-05-16T06:45:36.100Z","updated":"2020-05-16T14:31:49.645Z","comments":true,"path":"2020/05/16/第二课/","link":"","permalink":"http://yoursite.com/2020/05/16/%E7%AC%AC%E4%BA%8C%E8%AF%BE/","excerpt":"时光荏苒，旦夕之间，略有遗憾，似白驹过隙，蹉跎自悟。","text":"时光荏苒，旦夕之间，略有遗憾，似白驹过隙，蹉跎自悟。 并发:指两个或多个事件在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。 并行:指两个或多个事件在同一时刻同时发生。 共享即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用 并发和共享互为存在条件 虚拟:指一个物理上的实体变为若干个逻辑上的对应物。物理实体是实际存在的，而逻辑上对应物是用户感受到的 虚拟存储器，空分复用技术 异步:指在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"第一课","slug":"第一课","date":"2020-05-15T08:08:30.408Z","updated":"2020-05-26T10:50:59.874Z","comments":true,"path":"2020/05/15/第一课/","link":"","permalink":"http://yoursite.com/2020/05/15/%E7%AC%AC%E4%B8%80%E8%AF%BE/","excerpt":"​ 操作系统的概念 操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织调度计算机的工作和资源的分配， 以提供给用户和其他软件方便的接口和环境，它是计算机系统中最基本的系统软件。","text":"​ 操作系统的概念 操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织调度计算机的工作和资源的分配， 以提供给用户和其他软件方便的接口和环境，它是计算机系统中最基本的系统软件。 ​ 操作系统的功能和目标进程是一个程序的执行过程。执行前需要将该程序放到内存中，才能被cpu处理。 广义指令=系统调用命令=广义指令 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]}],"categories":[],"tags":[]}